{"version":3,"sources":["App.js","index.js"],"names":["Mars","props","state","weather","loading","fetch","mode","then","response","json","data","dayArr","sol_keys","weatherArr","i","length","sol","push","day","season","Season","wind","HWS","av","direction","WD","most_common","compass_point","pressure","PRE","temperature","AT","setState","this","className","map","d","string","key","charAt","toUpperCase","slice","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAqFeA,G,8DAhFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,SAAS,GAJM,E,gEASA,IAAD,OAIpBC,MAAM,+EAA+E,CACnFC,KAAM,SAEDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAID,IAHD,IAAMC,EAASD,EAAKE,SACdC,EAAa,GAETC,EAAE,EAAGA,EAAEH,EAAOI,OAAQD,IAAK,CAClC,IAAIE,EAAML,EAAOG,GACjBD,EAAWI,KAAK,CACfC,IAAKF,EACLG,OAAQT,EAAKM,GAAKI,OAClBC,KAAMX,EAAKM,GAAKM,IAAIC,GACpBC,UAAWd,EAAKM,GAAKS,GAAGC,YAAYC,cACpCC,SAAUlB,EAAKM,GAAKa,IAAIN,GACxBO,YAAapB,EAAKM,GAAKe,GAAGR,KAI9B,EAAKS,SAAS,CACZ7B,QAASU,S,+BAKX,IACHV,EAAW8B,KAAK/B,MAAhBC,QAGH,OACE,yBAAK+B,UAAU,OACb,gCACI,oCACA,8CAIJ,iCAEG/B,EAAQgC,KAAI,SAAAC,GAEX,IAAIC,EAASD,EAAEjB,OAKf,OACE,6BAASmB,IAAKF,EAAElB,KACd,wCAAckB,EAAElB,KACd,4BACE,4CAAkBkB,EAAEN,YAApB,WACA,2CAAiBM,EAAEf,KAAnB,QACA,+CAAqBe,EAAEZ,WACvB,uCAXO,SAACa,GACd,OAAOA,EAAOE,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,GAUlCtB,CAAOkB,e,GApErBK,IAAMC,YCEzBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c2c34c0c.chunk.js","sourcesContent":["import React from 'react';\nimport 'normalize.css'; \nimport './App.css';\n\nclass Mars extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      weather: [],\n      loading: true\n    }\n  }\n\n\ncomponentDidMount() {\n  // let dayArray = []\n\n   //Fetch test data from the NASA Open APIs and display information on the screen:\nfetch('https://api.nasa.gov/insight_weather/?api_key=DEMO_KEY&feedtype=json&ver=1.0',{\n  mode: 'cors'\n  })\n      .then(response => response.json())\n      .then(data =>  {\n          const dayArr = data.sol_keys\n          const weatherArr = []\n          \n           for (let i=0; i<dayArr.length; i++) {\n             let sol = dayArr[i]\n             weatherArr.push({\n              day: sol, \n              season: data[sol].Season, \n              wind: data[sol].HWS.av,\n              direction: data[sol].WD.most_common.compass_point,\n              pressure: data[sol].PRE.av,\n              temperature: data[sol].AT.av\n            })\n          }\n          // console.log(weatherArr)\n          this.setState({\n            weather: weatherArr\n          })\n       })\n}\n\nrender() {\nconst {weather} = this.state    \n// console.log(`This is what is in the render: ${weather}`)\n\n    return (\n      <div className=\"App\">\n        <header>\n            <h1>MARS</h1>\n            <h2>Weather Watch</h2>\n        </header>\n\n  {/* Create the weather data cards */}\n        <section>\n\n          {weather.map(d => {\n            // change the first letter of the season to uppercase\n            let string = d.season\n            const season = (string) => {\n              return string.charAt(0).toUpperCase() + string.slice(1);\n            }\n              \n            return(\n              <article key={d.day}>\n                <h3>Day: SOL {d.day}</h3>\n                  <ul>\n                    <li>Temperature: {d.temperature} &#8451;</li>\n                    <li>Wind Speed: {d.wind} m/s</li>\n                    <li>Wind Direction: {d.direction}</li>\n                    <li>Season: {season(string)}</li>\n                  </ul>\n              </article>\n            )\n          })}\n\n        </section>\n      </div>\n    );\n  }\n}\n  \n\nexport default Mars;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}